<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft.ware.rest.modular.goods.dao.TGoodsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.soft.ware.rest.modular.goods.model.TGoods">
        <id column="id" property="id" />
        <result column="category_id" property="categoryId" />
        <result column="name" property="name" />
        <result column="code" property="code" />
        <result column="unit_id" property="unitId" />
        <result column="price" property="price" />
        <result column="pics" property="pics" />
        <result column="description" property="description" />
        <result column="created_time" property="createdTime" />
        <result column="creater" property="creater" />
        <result column="owner_id" property="ownerId" />
        <result column="status" property="status" />
        <result column="sells" property="sells" />
        <result column="sort" property="sort" />
        <result column="is_delete" property="isDelete" />
        <result column="source" property="source" />
        <result column="top_time" property="topTime" />
        <result column="is_promotion" property="isPromotion" />
    </resultMap>

    <resultMap id="GoodsMap" type="map" autoMapping="true">
        <id column="id" property="id"/>
        <result column="spec_id"/>
        <result column="spec_name"/>
        <collection property="specs" ofType="map" javaType="list" columnPrefix="spec_" autoMapping="true"/>
    </resultMap>

    <resultMap id="ResultGoodsMap" type="com.soft.ware.rest.modular.goods.controller.dto.GoodsParam">
        <result column="id"/><result column="name"/><result column="code"/><result column="unitId"/><result column="status"/><result column="price"/><result column="pics"/>
        <result column="isPromotion"/><result column="description"/><result column="sells"/><result column="sort"/><result column="source"/><result column="categoryId"/>
        <result column="creater"/><result column="createTime"/><result column="promotionMoney"/><result column="startTime"/><result column="endTime"/><result column="specsName"/>
        <result column="categoryName"/><result column="stock"/><result column="baseline"/>

    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, category_id , name, code, unit_id , price, pics, description, DATE_FORMAT(created_time,'%Y-%m-%d %H:%i:%s'), creater, owner_id , status, sells, sort, is_delete , source, top_time , is_promotion
    </sql>
    <sql id="t_goods_alias_columns">
        g.category_id categoryId,g.name ,g.code ,g.unit_id unitId,g.price ,g.pics ,g.description ,DATE_FORMAT(g.created_time,'%Y-%m-%d %H:%i:%s') createdTime,g.creater ,g.owner_id ownerId,g.status ,g.sells ,g.sort ,g.is_delete isDelete,g.source ,DATE_FORMAT(g.top_time,'%Y-%m-%d %H:%i:%s') topTime
        <!--,g.is_promotion isPromotion--> <!--删掉了 需要配合 t_promotion 才有意义-->
    </sql>
    <sql id="limit">
        limit #{page.size} offset #{page.offset}
    </sql>
    <sql id="findPageCondition">
        <if test="param.category != null and param.category != ''">
            and g.category_id = #{param.category}
        </if>
        <if test="param.name != null and param.name != ''">
            and g.name like CONCAT('%',#{param.name},'%')
        </if>
    </sql>

    <select id="findPage" resultMap="GoodsMap">
        select
        g.id,
        <include refid="t_goods_alias_columns"/>
        ,tp.id promotionId ,tp.money promotionMoney,DATE_FORMAT(tp.start_time,'%Y-%m-%d %H:%i:%s') startTime,DATE_FORMAT(tp.end_time,'%Y-%m-%d %H:%i:%s') endTime
        ,(g.is_promotion = 1 and now() >= tp.start_time and now() &lt; tp.end_time) isPromotion
        ,u.name measurementUnit
        ,ts.name spec_name, ts.id spec_id
        from t_goods g
        left join t_unit u on u.id = g.unit_id
        left join t_promotion tp on tp.goods_id = g.id
        left join t_specs ts on ts.goods_id = g.id
        where true
        and g.owner_id = #{owner} and g.is_delete = 0 and  g.status = 1 and g.owner_id = #{owner}
        <include refid="findPageCondition"/>
        order by sort asc
        <include refid="limit"/>
    </select>
    <select id="findPageCount" resultType="long">
        select count(1) from t_goods g where g.is_delete = 0 and  g.status = 1 and g.owner_id = #{owner}
        <include refid="findPageCondition"/>
    </select>
    <select id="findMaps" resultType="java.util.Map" resultMap="GoodsMap">
        select
        g.id,
        <include refid="t_goods_alias_columns"/>
        ,tp.id promotionId ,tp.money promotionMoney,DATE_FORMAT(tp.start_time,'%Y-%m-%d %H:%i:%s') startTime,DATE_FORMAT(tp.end_time,'%Y-%m-%d %H:%i:%s') endTime
        ,(g.is_promotion = 1 and now() >= tp.start_time and now() &lt; tp.end_time) isPromotion
        ,u.name measurementUnit
        ,ts.name spec_name, ts.id spec_id
        <!-- 查询库存信息 -->
        ,((select ifnull(sum(ggss.in_amount),0) from t_goods_storage ggss where ggss.goods_id = g.id) - (select ifnull(sum(oocc.goods_num),0) from t_order_child oocc,t_order oo where oo.id = oocc.order_id and oo.status in (1,2,3,10)  and oocc.goods_id = g.id)) as storage
        from t_goods g
        left join t_unit u on u.id = g.unit_id
        left join t_promotion tp on tp.goods_id = g.id
        left join t_specs ts on ts.goods_id = g.id
        where true
        <if test="map.id != null and map.id != ''">
        and g.id = #{map.id}
        </if>
        <if test="map.ids != null and map.ids != ''">
            and g.id in (${map.ids})
        </if>
        <if test="map.specId != null and map.specId != ''">
            and gs.id in (${map.specId})
        </if>
        <if test="map.isDelete != null and map.isDelete != ''">
            and g.is_delete = #{map.isDelete}
        </if>
        <if test="map.beginTime != null">
            and g.is_delete = #{map.isDelete}
        </if>
        <choose>
            <!--商品计算价格需要这个 in ids 排序 -->
            <when test="map.ids != null and map.ids != ''">
                order by field(g.id,${map.ids})
            </when>
            <otherwise>
                <!--普通列表查询-->
                order by g.created_time desc
            </otherwise>
        </choose>
        <!--<include refid="com.soft.ware.rest.modular.order.dao.TOrderMapper.map_limit"></include>-->
    </select>

    <!--根据商品分类id查询所有商品列表-->
    <select id="selectTGoodsListByMap"  resultType="java.util.HashMap" >
        select a.id,a.name,a.code,a.unit_id as unitId,a.price,a.pics,a.is_promotion isPromotion,a.description,a.sells,a.sort,a.source,a.category_id categoryId,a.creater,a.created_time createTime,b.start_time startTime,b.end_time endTime,c.`name` as specName ,d.`name` categoryName,
        e.after_storage stock ,e.baseline
        from t_goods a
        LEFT JOIN t_promotion b on a.id = b.goods_id
        LEFT JOIN (select GROUP_CONCAT(name) name,goods_id from t_specs GROUP BY goods_id) c on a.id = c.goods_id
        LEFT JOIN t_category d on a.category_id = d.id
        LEFT JOIN t_goods_storage e on a.id = e.goods_id
        where 1=1
        <if test="param.categoryId != null and param.categoryId != ''">
            and a.category_id = #{param.categoryId}
        </if>
        <if test="param.owner_id != null and param.owner_id != ''">
            and a.owner_id = #{param.owner_id}
        </if>
        <if test="param.name != null and param.name != ''">
            and a.name like '%${param.name}%'
        </if>
       <include refid="limit"></include>
    </select>

    <update id="updateGoodsTopTimeOrStatus" parameterType="java.util.Map">
      <if test="top_time != null and top_time != ''">
          update t_goods set top_time = #{top_time} where id = #{id}
      </if>
      <if test="status != null and status != ''">
          update t_goods set status = #{status} where id = #{id}
      </if>

    </update>


<select id="findById"  parameterType="String" resultType="java.util.HashMap" >
     select a.id,a.name,a.code,a.unit_id unitId,a.`status`,a.price,a.pics,a.is_promotion isPromotion,a.description,a.sells,a.sort,a.source,a.category_id categoryId,a.creater,a.created_time createTime,b.money as promotionMoney,b.start_time startTime,b.end_time endTime,c.`name` as specsName ,d.`name` categoryName,
    IFNULL(e.after_storage,0) stock ,IFNULL(e.baseline,0)
    from t_goods a
        LEFT JOIN t_promotion b on a.id = b.goods_id
        LEFT JOIN (select GROUP_CONCAT(name) name,goods_id from t_specs GROUP BY goods_id) c on a.id = c.goods_id
        LEFT JOIN t_category d on a.category_id = d.id
        LEFT JOIN t_goods_storage e on a.id = e.goods_id
        where 1=1 and  a.id = #{id,jdbcType=VARCHAR}

</select>



</mapper>
