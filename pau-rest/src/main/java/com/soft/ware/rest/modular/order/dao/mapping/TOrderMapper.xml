<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft.ware.rest.modular.order.dao.TOrderMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.soft.ware.rest.modular.order.model.TOrder">
        <id column="id" property="id" />
        <result column="order_no" property="orderNo" />
        <result column="source" property="source" />
        <result column="pickup_no" property="pickupNo" />
        <result column="pickup_time" property="pickupTime" />
        <result column="money_channel" property="moneyChannel" />
        <result column="order_money" property="orderMoney" />
        <result column="run_money" property="runMoney" />
        <result column="pay_money" property="payMoney" />
        <result column="pay_time" property="payTime" />
        <result column="pay_response" property="payResponse" />
        <result column="create_time" property="createTime" />
        <result column="creater" property="creater" />
        <result column="settlementer" property="settlementer" />
        <result column="owner_id" property="ownerId" />
        <result column="address_id" property="addressId" />
        <result column="type" property="type" />
        <result column="version" property="version" />
        <result column="status" property="status" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, order_no AS orderNo, source, pickup_no AS pickupNo, pickup_time AS pickupTime, money_channel AS moneyChannel, order_money AS orderMoney, run_money AS runMoney, pay_money AS payMoney, pay_time AS payTime, pay_response AS payResponse, create_time AS createTime, creater, settlementer, owner_id AS ownerId, address_id AS addressId, type, version, status, remark
    </sql>
    <sql id="t_order_alias_columns">
        a.id,a.order_no orderNo,a.source source,a.pickup_no pickupNo,DATE_FORMAT(a.pickup_time,'%Y-%m-%d %H:%i:%s') pickupTime,a.money_channel moneyChannel,a.order_money orderMoney,a.run_money runMoney,a.pay_money payMoney,DATE_FORMAT(a.pay_time,'%Y-%m-%d %H:%i:%s') payTime,a.pay_response payResponse,DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%s') createTime,a.creater creater,a.settlementer settlementer,a.owner_id ownerId,a.address_id addressId,a.type type,a.version version,a.status status,a.remark remark
    </sql>




    <sql id="Condition">
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
        <if test="orderNo != null and orderNo != ''">
            and order_no = #{orderNo}
        </if>
        <if test="version != null and version != ''">
            and version = #{version}
        </if>
        <if test="status != null and status != ''">
            and status = #{status}
        </if>
        <if test="owner_id != null and owner_id != ''">
            and owner_id = #{owner_id}
        </if>
        <if test="page != null">
            limit #{page},20
        </if>

    </sql>

    <select id="selectOrderListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from t_order where 1=1
         <include refid="Condition"></include>

    </select>
    <sql id="findListCondition">
        <if test="source != null">
            and a.source in
            <foreach collection="source" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="param.status != null">
            and a.status in
            <foreach collection="param.statusArray" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <!--根据买家用户查询-->
        <if test="user.openId != null">
            and a.creater in (#{user.openId})
        </if>
    </sql>
    <select id="findListCount" resultType="java.lang.Long">
        select count(1) from t_order a where a.owner_id = #{user.ownerId}
        <include refid="findListCondition"/>
    </select>
    <select id="findList" resultType="java.util.Map">
        select
        a.id id,a.order_no orderNo,a.source source,a.pickup_no pickupNo,DATE_FORMAT(a.pickup_time,'%Y-%m-%d %H:%i:%s') pickupTime,a.money_channel moneyChannel,a.order_money orderMoney,a.run_money runMoney,a.pay_money payMoney,DATE_FORMAT(a.pay_time,'%Y-%m-%d %H:%i:%s') payTime,a.pay_response payResponse,DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%s') createTime,a.creater creater,a.settlementer settlementer,a.owner_id ownerId,a.address_id addressId,a.type type,a.version version,a.status status,a.remark remark
        ,b.pay_order_no as diffNo, b.money as diffTicketMoney, b.pic as diffPic, b.money_diff as diffMoney, b.status as diffStatus
        from t_order a left outer join t_order_money_diff b on a.owner_id = b.owner_id and a.order_no = b.order_no
        where a.owner_id = #{user.ownerId}
        <include refid="findListCondition"/>
        order by a.create_time desc
        <include refid="limit"/>
    </select>
    <sql id="limit">
        limit #{page.size} offset #{page.offset}
    </sql>
    <sql id="map_limit">
        <if test="map != null and map.page != null">
            limit #{map.page.size} offset #{map.page.offset}
        </if>
    </sql>


    <resultMap id="orderMap" type="map" autoMapping="true">
        <id column="id" property="id"/>
        <result column="child_goodsId"/>
        <result column="child_goodsPic"/>
        <result column="child_goodsNum"/>
        <result column="child_goodsPrice"/>
        <result column="child_goodsName"/>
        <collection property="goods" ofType="map" javaType="list" columnPrefix="child_" autoMapping="true"/>
    </resultMap>
    <select id="findMaps" resultType="java.util.Map" resultMap="orderMap">
    select
    a.id id,
    <include refid="t_order_alias_columns"/>
    ,b.pay_order_no diffNo,b.money ticketMoney,b.money_diff diffMoney,b.pic diffPic,b.status diffStatus,DATE_FORMAT(b.pay_time,'%Y-%m-%d %H:%i:%s') diffPayTime
    ,ta.phone phone,ta.owner_id ownerId,ta.name name,ta.province province,ta.detail detail,ta.is_default isDefault,ta.is_delete isDelete,DATE_FORMAT(ta.created_time,'%Y-%m-%d %H:%i:%s') createdTime,ta.creater creater,DATE_FORMAT(ta.deleted_time,'%Y-%m-%d %H:%i:%s') deletedTime
    ,tr.id id,tr.order_no orderNo,tr.reason reason,tr.status status,tr.order_money orderMoney,tr.response response,DATE_FORMAT(tr.create_time,'%Y-%m-%d %H:%i:%s') createTime,tr.creater creater
    ,oc.id child_id,oc.goods_id child_goodsId,oc.goods_name child_goodsName,oc.goods_price child_goodsPrice,oc.goods_pic child_goodsPic,oc.goods_num child_goodsNum
    from t_order a
    left join t_order_child oc on oc.order_id = a.id
    left join t_order_money_diff b on a.order_no = b.order_no
    left join t_address ta on ta.id = a.address_id
    left join t_refund tr on tr.order_no = a.order_no
    where true
    <if test="map.id != null and map.id != ''">
        and a.id = #{map.id}
    </if>
    <if test="map.orderNo != null and map.orderNo != ''">
        and a.order_no = #{map.orderNo}
    </if>
    <if test="map.source != null and map.source != ''">
        and a.source = #{map.source}
    </if>
    <if test="map.pickupNo != null and map.pickupNo != ''">
        and a.pickup_no = #{map.pickupNo}
    </if>
    <if test="map.moneyChannel != null and map.moneyChannel != ''">
        and a.money_channel = #{map.moneyChannel}
    </if>
    <if test="map.creater != null and map.creater != ''">
        and a.creater = #{map.creater}
    </if>
    <if test="map.ownerId != null and map.ownerId != ''">
        and a.owner_id = #{map.ownerId}
    </if>
    <if test="map.type != null and map.type != ''">
        and a.type = #{map.type}
    </if>
    <if test="map.status != null and map.status != ''">
        and a.status in (${map.status})
    </if>
    <if test="map.sources != null and map.sources != ''">
        and a.source in (${map.sources})
    </if>
    <include refid="map_limit"/>
    </select>

    <select id="selectOrdersListByMap" parameterType="java.util.Map" resultType="java.util.Map">


        select  a.id id,<include refid="t_order_alias_columns"/>,  b.`name` ,b.phone ,b.province as address,c.`status` as 'refundStatus',
        d.money as diffMoney,d.money_diff as moneyDiff,d.pay_order_no as payOrderNo,d.`status` as 'diffStatus'
                from t_order a
                LEFT JOIN t_address b
                on a.address_id = b.id
                LEFT JOIN t_refund c
                on a.order_no = c.order_no
                LEFT JOIN t_order_money_diff d
                on a.order_no = d.order_no
                where 1=1
            <if test="status != null and status != ''">
                and a.status = #{status}
            </if>
            <if test="owner_id != null and owner_id != ''">
                and a.owner_id = #{owner_id}
            </if>
            <if test="page != null and page != ''">
                limit #{page},20
            </if>
    </select>

    <select id="selectOrderCount" resultType="int" >
        select count(1) from t_order a where owner_id = #{ownerId}
    </select>


    <update id="customerDelete">
        update t_order set status = -3 where owner_id = #{user.ownerId} and order_no = #{param.no} and creater = #{user.openId} and status in (-2, -1, 0, 3);
    </update>
    <update id="customerCancel">
        update t_order set status = -1, canceler = #{user.openId}, cancel_time = now() where owner_id = #{user.ownerId} and order_no = #{param.no} and creater = #{user.openId} and status in (0, 1);
    </update>

    <!--根据订单id查询订单 -->
    <select id="selectOrderDetailById" resultType="com.soft.ware.rest.modular.order.model.TOrder">
        select <include refid="t_order_alias_columns"/> from t_order a where a.order_no = #{orderNo}

    </select>
</mapper>
